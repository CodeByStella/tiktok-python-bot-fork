"""
This type stub file was generated by pyright.
"""

class RootContext:
    """
    The outermost context provided to the root layer.
    As a consequence, every layer has access to methods and attributes defined here.

    Attributes:
        client_conn:
            The :py:class:`client connection <seleniumwire.thirdparty.mitmproxy.connections.ClientConnection>`.
        channel:
            A :py:class:`~seleniumwire.thirdparty.mitmproxy.controller.Channel` to communicate with the FlowMaster.
            Provides :py:meth:`.ask() <seleniumwire.thirdparty.mitmproxy.controller.Channel.ask>` and
            :py:meth:`.tell() <seleniumwire.thirdparty.mitmproxy.controller.Channel.tell>` methods.
        config:
            The :py:class:`mitmproxy server's configuration <seleniumwire.thirdparty.mitmproxy.server.ProxyConfig>`
    """
    def __init__(self, client_conn, config, channel) -> None:
        ...
    
    def next_layer(self, top_layer):
        """
        This function determines the next layer in the protocol stack.

        Arguments:
            top_layer: the current innermost layer.

        Returns:
            The next layer
        """
        ...
    
    def log(self, msg, level, subs=...): # -> None:
        """
        Send a log message to the master.
        """
        ...
    


