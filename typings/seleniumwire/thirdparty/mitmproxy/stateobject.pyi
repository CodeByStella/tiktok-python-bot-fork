"""
This type stub file was generated by pyright.
"""

import typing
from seleniumwire.thirdparty.mitmproxy.coretypes import serializable
from seleniumwire.thirdparty.mitmproxy.utils import typecheck

class StateObject(serializable.Serializable):
    """
    An object with serializable state.

    State attributes can either be serializable types(str, tuple, bool, ...)
    or StateObject instances themselves.
    """
    _stateobject_attributes: typing.ClassVar[typing.MutableMapping[str, typing.Any]]
    def get_state(self): # -> dict[Any, Any]:
        """
        Retrieve object state.
        """
        ...
    
    def set_state(self, state): # -> None:
        """
        Load object state from data returned by a get_state call.
        """
        ...
    


def make_object(typeinfo: typecheck.Type, val: typing.Any) -> typing.Any:
    """Create an object based on the state given in val."""
    ...

def get_state(typeinfo: typecheck.Type, val: typing.Any) -> typing.Any:
    """Get the state of the object given as val."""
    ...

