"""
This type stub file was generated by pyright.
"""

MAX_16_BIT_INT = ...
MAX_64_BIT_INT = ...
DEFAULT = ...
OPCODE = ...
CLOSE_REASON = ...
class FrameHeader:
    def __init__(self, opcode=..., payload_length=..., fin=..., rsv1=..., rsv2=..., rsv3=..., masking_key=..., mask=..., length_code=...) -> None:
        ...
    
    def __repr__(self): # -> LiteralString:
        ...
    
    def __bytes__(self): # -> bytes:
        ...
    
    @classmethod
    def from_file(cls, fp): # -> Self:
        """
          read a WebSocket frame header
        """
        ...
    
    def __eq__(self, other) -> bool:
        ...
    


class Frame:
    """
    Represents a single WebSocket frame.
    Constructor takes human readable forms of the frame components.
    from_bytes() reads from a file-like object to create a new Frame.

    WebSocket frame as defined in RFC6455

       0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
      +-+-+-+-+-------+-+-------------+-------------------------------+
      |F|R|R|R| opcode|M| Payload len |    Extended payload length    |
      |I|S|S|S|  (4)  |A|     (7)     |             (16/64)           |
      |N|V|V|V|       |S|             |   (if payload len==126/127)   |
      | |1|2|3|       |K|             |                               |
      +-+-+-+-+-------+-+-------------+ - - - - - - - - - - - - - - - +
      |     Extended payload length continued, if payload len == 127  |
      + - - - - - - - - - - - - - - - +-------------------------------+
      |                               |Masking-key, if MASK set to 1  |
      +-------------------------------+-------------------------------+
      | Masking-key (continued)       |          Payload Data         |
      +-------------------------------- - - - - - - - - - - - - - - - +
      :                     Payload Data continued ...                :
      + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
      |                     Payload Data continued ...                |
      +---------------------------------------------------------------+
    """
    def __init__(self, payload=..., **kwargs) -> None:
        ...
    
    @classmethod
    def from_bytes(cls, bytestring): # -> Self:
        """
          Construct a websocket frame from an in-memory bytestring
          to construct a frame from a stream of bytes, use from_file() directly
        """
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __bytes__(self): # -> bytes:
        """
            Serialize the frame to wire format. Returns a string.
        """
        ...
    
    @classmethod
    def from_file(cls, fp): # -> Self:
        """
          read a WebSocket frame sent by a server or client

          fp is a "file like" object that could be backed by a network
          stream or a disk or an in memory stream reader
        """
        ...
    
    def __eq__(self, other) -> bool:
        ...
    


