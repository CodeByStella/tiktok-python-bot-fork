"""
This type stub file was generated by pyright.
"""

from typing import Optional, Tuple
from seleniumwire.thirdparty.mitmproxy import connections, flow
from seleniumwire.thirdparty.mitmproxy.net import http

HTTPRequest = http.Request
HTTPResponse = http.Response
class HTTPFlow(flow.Flow):
    """
    An HTTPFlow is a collection of objects representing a single HTTP
    transaction.
    """
    request: HTTPRequest
    response: Optional[HTTPResponse] = ...
    error: Optional[flow.Error] = ...
    server_conn: connections.ServerConnection
    client_conn: connections.ClientConnection
    intercepted: bool = ...
    mode: str
    def __init__(self, client_conn, server_conn, live=..., mode=...) -> None:
        ...
    
    _stateobject_attributes = ...
    def __repr__(self): # -> str:
        ...
    
    @property
    def timestamp_start(self) -> float:
        ...
    
    def copy(self): # -> Self:
        ...
    


def make_error_response(status_code: int, message: str = ..., headers: Optional[http.Headers] = ...) -> HTTPResponse:
    ...

def make_connect_request(address: Tuple[str, int]) -> HTTPRequest:
    ...

def make_connect_response(http_version): # -> HTTPResponse:
    ...

def make_expect_continue_response(): # -> Response:
    ...

