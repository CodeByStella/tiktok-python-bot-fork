"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict
from selenium.webdriver import Chrome as _Chrome, Edge as _Edge, Firefox as _Firefox, Remote as _Remote, Safari as _Safari
from seleniumwire.inspect import InspectRequestsMixin

SELENIUM_V4 = ...
class DriverCommonMixin:
    """Attributes common to all webdriver types."""
    def quit(self): # -> None:
        """Shutdown Selenium Wire and then quit the webdriver."""
        ...
    
    @property
    def proxy(self) -> Dict[str, Any]:
        """Get the proxy configuration for the driver."""
        ...
    
    @proxy.setter
    def proxy(self, proxy_conf: Dict[str, Any]): # -> None:
        """Set the proxy configuration for the driver.

        The configuration should be a dictionary:

        webdriver.proxy = {
            'https': 'https://user:pass@server:port',
            'no_proxy': 'localhost,127.0.0.1',
        }

        Args:
            proxy_conf: The proxy configuration.
        """
        ...
    


class Firefox(InspectRequestsMixin, DriverCommonMixin, _Firefox):
    """Extend the Firefox webdriver to provide additional methods for inspecting requests."""
    def __init__(self, *args, seleniumwire_options=..., **kwargs) -> None:
        """Initialise a new Firefox WebDriver instance.

        Args:
            seleniumwire_options: The seleniumwire options dictionary.
        """
        ...
    


class Chrome(InspectRequestsMixin, DriverCommonMixin, _Chrome):
    """Extend the Chrome webdriver to provide additional methods for inspecting requests."""
    def __init__(self, *args, seleniumwire_options=..., **kwargs) -> None:
        """Initialise a new Chrome WebDriver instance.

        Args:
            seleniumwire_options: The seleniumwire options dictionary.
        """
        ...
    


class Safari(InspectRequestsMixin, DriverCommonMixin, _Safari):
    """Extend the Safari webdriver to provide additional methods for inspecting requests."""
    def __init__(self, seleniumwire_options=..., *args, **kwargs) -> None:
        """Initialise a new Safari WebDriver instance.

        Args:
            seleniumwire_options: The seleniumwire options dictionary.
        """
        ...
    


class Edge(InspectRequestsMixin, DriverCommonMixin, _Edge):
    """Extend the Edge webdriver to provide additional methods for inspecting requests."""
    def __init__(self, seleniumwire_options=..., *args, **kwargs) -> None:
        """Initialise a new Edge WebDriver instance.

        Args:
            seleniumwire_options: The seleniumwire options dictionary.
        """
        ...
    


class Remote(InspectRequestsMixin, DriverCommonMixin, _Remote):
    """Extend the Remote webdriver to provide additional methods for inspecting requests."""
    def __init__(self, *args, seleniumwire_options=..., **kwargs) -> None:
        """Initialise a new Firefox WebDriver instance.

        Args:
            seleniumwire_options: The seleniumwire options dictionary.
        """
        ...
    


